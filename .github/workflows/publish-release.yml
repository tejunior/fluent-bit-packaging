name: Publish release
on:
  workflow_run:
    workflows: [ 'Build release' ]
    types:
      - completed

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2

      - name: Retrieve versions
        run: |
          echo "FB_LINUX_VERSION=v$(awk -F, '/^linux,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV
          echo "FB_WIN_VERSION=$(awk -F, '/^windows,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV
          echo "NRFB_ARTIFACT_VERSION=$(awk -F, '/^artifact,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV

      - name: Print versions
        run: |
          echo "FB_LINUX: ${{ env.FB_LINUX_VERSION }}"
          echo "FB_WIN: ${{ env.FB_WIN_VERSION}}"
          echo "NR ARTIFACT: ${{ env.NRFB_ARTIFACT_VERSION }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NRFB_ARTIFACT_VERSION }}
          release_name: nrfb v${{ env.NRFB_ARTIFACT_VERSION }}
          body: |
            Included into this Release
            - FluentBit Linux Version: ${{ env.FB_LINUX_VERSION }}
            - FluentBit Windows Version: v${{ env.FB_WIN_VERSION}}
          draft: false
          prerelease: false

  publish-distro-artifacts:
    name: publish distro artifacts
    needs: create-release
    strategy:
      max-parallel: 48
      fail-fast: true
      matrix:
        distro: [ amazonlinux/2, amazonlinux/2.arm64v8, centos/7, centos/7.arm64v8, debian/jessie,
                  debian/jessie.arm64v8, debian/stretch, debian/stretch.arm64v8, debian/buster,
                  debian/buster.arm64v8, ubuntu/16.04, ubuntu/18.04, ubuntu/20.04, ubuntu/18.04.arm64v8,
                  ubuntu/20.04.arm64v8, opensuse/leap ]
        include:
          - distro: amazonlinux/2
            target: amazonlinux/2/
            format: rpm

          - distro: amazonlinux/2.arm64v8
            target: amazonlinux/2/
            format: rpm

          - distro: centos/7
            target: centos/7/
            format: rpm

          - distro: centos/7.arm64v8
            target: centos/7/
            format: rpm

          - distro: debian/jessie
            target: debian/jessie/
            format: deb

          - distro: debian/jessie.arm64v8
            target: debian/jessie/
            format: deb

          - distro: debian/stretch
            target: debian/stretch/
            format: deb

          - distro: debian/stretch.arm64v8
            target: debian/stretch/
            format: deb

          - distro: debian/buster
            target: debian/buster/
            format: deb

          - distro: debian/buster.arm64v8
            target: debian/buster/
            format: deb

          - distro: ubuntu/16.04
            target: ubuntu/xenial/
            format: deb

          - distro: ubuntu/18.04
            target: ubuntu/bionic/
            format: deb

          - distro: ubuntu/18.04.arm64v8
            target: ubuntu/bionic/
            format: deb

          - distro: ubuntu/20.04
            target: ubuntu/focal/
            format: deb

          - distro: ubuntu/20.04.arm64v8
            target: ubuntu/focal/
            format: deb

          - distro: raspbian/jessie
            target: raspbian/jessie/
            format: deb

          - distro: raspbian/stretch
            target: raspbian/stretch/
            format: deb

          - distro: raspbian/buster
            target: raspbian/buster/
            format: deb

    runs-on: [ ubuntu-latest ] #self-hosted, Linux, X64, packet-builder]
    steps:
      - uses: frabert/replace-string-action@master
        id: formatted_distro
        with:
          pattern: '(.*)\/(.*)$'
          string: "${{ matrix.distro }}"
          replace-with: '$1-$2'
          flags: 'g'

      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          workflow: build-release.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: nrfb-linux-${{env.distro-name}}
          path: artifacts
        env:
          distro-name: ${{ steps.formatted_distro.outputs.replaced }}

      - name: Move artifacts to main folder
        run: |
          mv artifacts/**/*.${{ env.format }} .
          tar -czvf fb-package-${{env.distro-name}}.tar.gz ./*.${{ env.format }}
          ls -la
        env:
          format: ${{ matrix.format }}
          distro-name: ${{ steps.formatted_distro.outputs.replaced }}

      - name: Upload Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          distro-name: ${{ steps.formatted_distro.outputs.replaced }}
          upload-url: ${{ needs.create-release.outputs.upload_url }}
        with:
          upload_url: ${{ env.upload-url }}
          asset_path: ./fb-package-${{env.distro-name}}.tar.gz
          asset_name: fb-package-${{env.distro-name}}.tar.gz
          asset_content_type: application/gzip

  publish-win32:
    needs: create-release

    runs-on: [ ubuntu-latest ] #self-hosted, Linux, X64, packet-builder]
    steps:
      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          workflow: build-release.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: nrfb-windows-386
          path: artifacts

      - name: Upload Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          upload-url: ${{ needs.create-release.outputs.upload_url }}
        with:
          upload_url: ${{ env.upload-url }}
          asset_path: ./artifacts/nrfb-windows-386.zip
          asset_name: fb-windows-386.zip
          asset_content_type: application/zip

  publish-win64:
    needs: create-release

    runs-on: [ ubuntu-latest ] #self-hosted, Linux, X64, packet-builder]
    steps:
      - name: Download artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          workflow: build-release.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: nrfb-windows-amd64
          path: artifacts

      - name: Upload Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          upload-url: ${{ needs.create-release.outputs.upload_url }}
        with:
          upload_url: ${{ env.upload-url }}
          asset_path: ./artifacts/nrfb-windows-amd64.zip
          asset_name: fb-windows-amd64.zip
          asset_content_type: application/zip
